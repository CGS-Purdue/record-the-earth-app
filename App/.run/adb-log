#!/bin/bash

# Android Debug Bridge version 1.0.41
# Version 29.0.2-5738569
# Installed as /data/projects/5_Android_Projects/AndroidSDK/platform-tools/adb
# #   -e <expr>, --regex=<expr>  Only print lines where the log message matches <expr>
# #   -m <count>, --max-count=<count> where <expr> is a regular expression
#
# logcat                   show device log (logcat --help for more)
#  Multiple -v parameters or comma separated list of format and format modifiers are allowed.
# <format>
#    type: ~ brief help long process raw tag thread threadtime time
#   + mod:  color descriptive epoch monotonic printable uid usec UTC year zone

# Usage: logcat [options] [filterspecs]
# options
#   -s              Set default filter to silent. Equivalent to filterspec '*:S'
#   -f <file>, --file=<file>               Log to file. Default is stdout
#   -r <kbytes>, --rotate-kbytes=<kbytes>
#                   Rotate log every kbytes. Requires -f optionWifiService:
#   -n <count>, --rotate-count=<count>
#                   Sets max number of rotated logs to <count>, default 4
#   --id=<id>       If the signature id for logging to file changes, then clear
#                   the fileset and continue
#   -v <format>, --format=<format>   Sets log print format verb and adverbs,
#                  format| brief help long process raw tag thread threadtime time
#                  modifers| color descriptive epoch monotonic printable uid usec UTC year zone
#   -D, --dividers  Print dividers between each log buffer
#   -c, --clear     Clear (flush) the entire log and exit if Log to File specified, clear fileset instead
#   -d              Dump the log and then exit (don't block)
#   -e <expr>, --regex=<expr>  print lines where the log message matches <expr>
#   -m <count> | --max-count=<count>   Quit after printing <count> lines. meant to be paired with --regex, but will work on its own.
#   --print         Paired with --regex and --max-count to let content bypass regex filter but still stop at number of matches.
#   -t <count>      Print only the most recent <count> lines (implies -d)
#   -T <count>      Print only the most recent <count> lines (does not imply -d)
#   -t '<time>'     Print most recent lines since specified time (implies -d)
#   -T '<time>'     Print most recent lines since specified time (not imply -d) count is pure numerical
#                       - 'MM-DD hh:mm:ss.mmm...'
#                       - 'YYYY-MM-DD hh:mm:ss.mmm...'
#                       - 'sssss.mmm...' format
#   -g, --buffer-size     Get the size of the ring buffer.
#   -G <size>, --buffer-size=<size>   Set size of log ring buffer, may suffix with K or M.
#   -L, --last      Dump logs from prior to last reboot
#   -b <buffer>, --buffer=<buffer>         Request alternate ring buffer,
#                   'all' or 'main', 'system', 'radio', 'events', 'crash', 'default'
#                   (Default: main,system,crash)
#                   Multiple -b parameters or comma separated list of buffers are allowed. Buffers interleaved.
#   -B, --binary          Output the log in binary.
#   -S, --statistics      output statistics.
#   -p, --prune   Print prune white and ~black list.
#                 Service is specified as UID, UID/PID or /PID.
#                 Weighed for quicker pruning if prefix with ~,
#                 otherwise weighed for longevity if unadorned.
#                 All other pruning activity is oldest first.
#                 Special case ~!# represents an automatic quicker pruning
#                 for the noisiest UID as determined by the current statistics.
#   -P '<list> ...', --prune='<list> ...'   Set prune white and ~black list, using same format as listed above. Must be quoted.
#         Only prints logs from the given pid.
#   --wrap        Sleep for 2 hours or when buffer about to wrap whichever comes first.
#                 Improves efficiency of polling by providing an about-to-wrap wakeup.
#
# [FILTERS] ... <tag>[:priority]
# <tag> is a log component tag (or * for all)
# priority is:
#   V    Verbose (default for <tag>)
#   D    Debug (default for '*')
#   I    Info
#   W    Warn
#   E    Error
#   F    Fatal
#   S    Silent (suppress all output)
# '*' by itself means '*:D'
# <tag> by itself means <tag>:V.
# If no '*' filterspec or -s on command line, all filter defaults to '*:V'.
#   '*:S <tag>' prints only <tag>
#   '<tag>:S' suppresses all <tag>
# If not specified on the command line
# filterspec is set from ANDROID_LOG_TAGS
# If not specified with -v on command line,
#   format is set from ANDROID_PRINTF_LOG
# or defaults to "threadtime"
# RCT_METRO_PORT=8081
#   experience.ExperienceActivity
#   host.exp.exponent/host.exp.exponent.experience.ExperienceActivity.*
#   *:ViewManager
#   *:ReactNative  abi34_0_0.com.facebook.react.bridge.*
# # react
# adb logcat -v process,color,printable -b main -b crash -b events WifiService:S sysui_multi_action:S CarrierServices:S

# adb logcat -v threadtime,color,monotonic,printable,uid -b main -b crash -b events WifiService:S sysui_multi_action:S CarrierServices:S
# adb logcat -v thread,color,monotonic,printable,uid -b main -b crash -b events WifiService:S sysui_multi_action:S CarrierServices:S
# adb logcat -v thread,color,printable -b all *:E
# adb logcat -v threadtime,monotonic,color,printable -b all WifiService:S sysui_multi_action:S CarrierServices:S
# adb logcat -v threadtime,monotonic,color,printable -b all WifiService:S sysui_multi_action:S CarrierServices:S
# -v process,monotonic,color,printable \
BASE_DIR="$(npm prefix)"

[[ -f .npmrc ]] && source .npmrc
[[ -f .env ]] && source .env

[[ -z $ANDROID_HOME ]] && echo 'ANDROID_HOME is not set. Skipping command' && exit 0

ABD_PATH="${ANDROID_HOME}/platform-tools"

# SUPPRESS ALL '*:S'
RUN_ABD_LOG_EXCLUDE="CarrierServices,WifiService,wpa_supplicant,ConnectivityService,getConnectionInfo,Bugle,getWifiEnabledState,sysui_multi_action"
RUN_ABD_LOG_INCLUDE="ReactNative:V ReactNativeJS:V"
RUN_ABD_LOG_FILTERS="${RUN_ABD_LOG_EXCLUDE//,/\:S }:S ${RUN_ABD_LOG_INCLUDE//,/\:\* }"

echo "${RUN_ABD_LOG_FILTERS//,/\:S }"
# -s supress everything (then add tags you want to see)
# ALL WARNINGS/ERRORS
# -b all *:W
# -b all *:E

${ABD_PATH}/adb logcat \
  --buffer=crash,main,security,events \
  -v threadtime,monotonic,color,printable \
  *:W ReactNative:V ReactNativeJS:V
