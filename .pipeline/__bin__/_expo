#!/bin/bash

# EXPO HELPER
# -------------
# device reverse tunnel        exp://127.0.0.1:19000
# Metro Bundler on                        port 19001
# Expo DevTools is running at http://localhost:19002
# echo "Configuring extra ports..."
# RCT_METRO_PORT=8081
# $ANDROID_HOME/platform-tools/adb reverse tcp:19002 tcp:19002
# $ANDROID_HOME/platform-tools/adb reverse tcp:19001 tcp:19001
# $ANDROID_HOME/platform-tools/adb reverse tcp:19000 tcp:19000
BASE_DIR="$(npm prefix)"

[[ -f .npmrc ]] && source .npmrc
[[ -f .env ]] && source .env

echo "Checking Android path ..."

[[ -z $ANDROID_HOME ]] && echo 'ANDROID_HOME is not set. Skipping command' && exit 0

APP_DIR="/data/apps"

DEBUG_LOGGING="yes"
EXPO_HOST="localhost"

# The debugger will receive a list of all project roots, separated by a space. For example, if you set
# REACT_DEBUGGER="node /path/to/launchDebugger.js --port 2345 --type ReactNative",
# node /path/to/launchDebugger.js --port 2345 --type ReactNative /path/to/reactNative/app
# Custom debugger commands executed this way should be short-lived processes, and they shouldn't produce more than 200 kilobytes of output.
# __REACT_DEVTOOLS_PORT__

echo "Settings up additional devtools..."
# $ANDROID_HOME/platform-tools/adb reverse tcp:8081 tcp:8081

# EXPO_HOST="lan"
# --offline
# eslint-plugin-eslint-comments


EXPO_DEBUG="true" \
DEBUG_LOGGING="${DEBUG_LOGGING}" expo "$@"
